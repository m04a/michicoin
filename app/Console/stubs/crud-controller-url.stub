<?php

namespace DummyNamespace;

use App\Http\Requests\DummyClassRequest;
use App\Http\Controllers\CrudUrlController; //Crud amb el suport per URLs de Michicoin
use Backpack\CRUD\app\Library\CrudPanel\CrudPanelFacade as CRUD;
use \App\Http\Traits\CrudHelpers;
use \App\Http\Traits\CrudPermissions;


/**
 * Class DummyClassCrudController
 * @package App\Http\Controllers\Admin
 * @property-read \Backpack\CRUD\app\Library\CrudPanel\CrudPanel $crud
 */
class DummyClassCrudController extends CrudUrlController
{
    use CrudHelpers;
    use CrudPermissions;

    //OPCIONAL: Afegir  plantilles
    //public $templates = 'DummyTable_templates.php';

    //Si definim aquest camp buscara la pagina per crear la url de manera jerarquica. Si no volem aixo simplement eliminem la linea
      protected $page_slug = 'dummy_class';

    /**
     * Configure the CrudPanel object. Apply settings to all operations.
     * 
     * @return void
     */
    public function setup()
    {
        CRUD::setModel(\App\Models\DummyClass::class);
        CRUD::setRoute(config('backpack.base.route_prefix') . '/dummy_class');
        CRUD::setEntityNameStrings(__('template.dummy_class'), __('template.DummyTable'));
        $this->setupPermissionActions('DummyTable');
    }

    /**
     * Define what happens when the List operation is loaded.
     * 
     * @see  https://backpackforlaravel.com/docs/crud-operation-list-entries
     * @return void
     */
    protected function setupListOperation()
    {
          $this->crud->addColumn([
            'name' => 'title', 
            'label' => trans('template.title'), 
         ]);
    }

    /**
     * Define what happens when the Create operation is loaded.
     * 
     * @see https://backpackforlaravel.com/docs/crud-operation-create
     * @return void
     */
    protected function setupCreateOperation()
    {
        CRUD::setValidation(DummyClassRequest::class);

        parent::setupCreateOperation();

        $this->crud->addField([
            'name' => 'priority',
            'type' => 'number',
            'default' => '0',
            'label' => trans('template.priority')
        ]);

        
        $this->crud->addField([
            'name' => 'title',
            'label' => trans('template.title'),
            'type' => 'text',
            'tab' => trans('template.content')
        ]);


        /*
        // Ejemplos de los campos FAKE para guardar contenido. Content para idiomas. Extras para el resto
         $this->crud->addField([
            'name' => 'image',
            'label' => trans('template.image'),
            'type' => 'browse_image',
            'fake' => true,
            'store_in' => 'extras',
            'tab' => trans('template.media')
        ]);

        $this->crud->addField([
            'name' => 'main',
            'label' => trans('template.main'),
            'type' => 'ckeditor',
            'fake' => true,
            'store_in' => 'content',
            'tab' => trans('template.content'),
        ]);
        
        */

  
    }


}